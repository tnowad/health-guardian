version: "3.8"
services:
  postgres:
    image: postgres:latest
    container_name: health-guardian-postgres
    environment:
      POSTGRES_USER: health-guardian
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: health-guardian
    ports:
      - "5432:5432"
    volumes:
      - health-guardian-postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - health-guardian-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: health-guardian-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: abc@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports: ["5050:80"]
    volumes:
      - health-guardian-pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - health-guardian-network

  redis:
    image: redis:latest
    container_name: health-guardian-redis
    ports:
      - "6379:6379"
    volumes:
      - health-guardian-redis-data:/data
    networks:
      - health-guardian-network
    restart: unless-stopped

  #  REDIS INSIGHT
  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    volumes:
      - redis-insight-data:/db
    depends_on:
      - redis
    networks:
      - health-guardian-network
    restart: unless-stopped

  #  KAFKA
  health-guardian-kafka:
    image: "bitnami/kafka:3.7.1-debian-12-r4"
    container_name: health-guardian-kafka
    hostname: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z.fips
    container_name: health-guardian-minio
    ports:
      - "9000:9000"
      - "9001:9001" # Mở port này để truy cập Minio Console
    volumes:
      - health-guardian-minio-data:/data # Tạo volume để lưu trữ dữ liệu
    environment:
      MINIO_ROOT_USER: minioadmin # Thay đổi tên người dùng mặc định
      MINIO_ROOT_PASSWORD: minioadmin # Thay đổi mật khẩu mặc định
    command: server /data --console-address ":9001"

  #_______________________________________ELK STACK_______________________________________
  # ELASTICSEARCH
  health-guardian-elasticsearch:
    image: elasticsearch:8.15.0
    container_name: health-guardian-elasticsearch
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - health-guardian-elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - health-guardian-network
    restart: unless-stopped

  # KIBANA
  health-guardian-kibana:
    image: kibana:8.15.0
    container_name: health-guardian-kibana
    depends_on: [health-guardian-elasticsearch]
    environment:
      ELASTICSEARCH_HOSTS: http://health-guardian-elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - health-guardian-network
    restart: unless-stopped

  # LOGSTASH
  health-guardian-logstash:
    image: logstash:8.15.0
    container_name: health-guardian-logstash
    depends_on: [health-guardian-elasticsearch]
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./docker/elk-stack/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./docker/elk-stack/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - health-guardian-network
    restart: unless-stopped

volumes:
  health-guardian-postgres-data:
  health-guardian-redis-data:
  health-guardian-pgadmin:
  health-guardian-minio-data:
  redis-insight-data:
  health-guardian-elasticsearch-data:

networks:
  health-guardian-network:
    driver: bridge
