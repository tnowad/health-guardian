server:
  port: 8080
  servlet:
    context-path: /health-guardian
    encoding:
      charset: UTF-8
  host: localhost

jwt:
  accessSignerKey: ${ACCESS_SIGNER_KEY}
  refreshSignerKey: ${REFRESH_SIGNER_KEY}
  valid-duration: 2592000 # in seconds
  refreshable-duration: 2592000 # in seconds

brevo-mail:
  from-mail: ${FROM_MAIL}
  url: https://api.brevo.com
  api-key: ${BREVO_API_KEY}
  server-url: http://${server.host}:${server.port}${server.servlet.context-path}

# Spring Boot Actuator configuration (Health, Info, Metrics, etc.)
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"

  endpoint:
    health:
      show-details: always

# Springdoc configuration (Swagger UI)
springdoc:
  api-docs:
    enabled: true
    path: /api-docs

  swagger-ui:
    enabled: true
    path: /swagger-ui.html

  show-actuator: true

# OpenAPI configuration
openapi:
  service:
    api-docs: rest-api-service-dev
    title: health-guardian-server REST API
    description: This is the API documentation for health-guardian-server
    version: 1.0.0
    server-url: http://localhost:${server.port}${server.servlet.context-path}
    server-description: Health guardian Backend API service For Development

spring:
  application:
    name: health-guardian-server

  messages:
    basename: i18n/messages
    encoding: UTF-8
    default-locale: en

  config:
    import: file:env.properties

  datasource:
    url: jdbc:postgresql://localhost:5432/health-guardian
    username: health-guardian
    password: admin
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    #__________________________REDIS
  cache:
    type: redis
  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:localhost}
      database: 0
  # Configure Kafka
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    mail-consumer:
      group-id: send-mail-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #      properties:
    #        spring.json.trusted.packages: "*"
    file-consumer:
      group-id: handle-file-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
# Logging SQL statements and formatting them for readability
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        security: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
